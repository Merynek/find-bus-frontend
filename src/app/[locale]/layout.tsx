import type { Metadata } from "next";
import { Geist } from "next/font/google";
import '@/src/styles/global.scss';
import {Header} from "@/src/components/compositions/header/header";
import {AppProvider} from "@/src/context/AppContext";
import {AppLoader} from "@/src/components/components/app-loader/app-loader";
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from "@/src/i18n/routing";
import NextAuthProvider from "@/src/context/NextAuthContext";
import {AuthorizationService} from "@/src/services/AuthorizationService";
import {PageLayout} from "@/src/components/components/layout/page-layout/page-layout";
import React from "react";
import {TagManager} from "@/src/components/head-components/TagManager";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface IRootLayoutProps {
    children: React.ReactNode;
    params: Promise<{locale: string}>;
}

export default async function RootLayout(props: IRootLayoutProps) {
    const {params, children} = props;
    const {locale} = await params;
    const user = await AuthorizationService.getLoggerUser();
    if (!hasLocale(routing.locales, locale)) {
        notFound();
    }

    return <html lang={locale}>
        <TagManager />
        <body className={`${geistSans.variable} antialiased`}>
        <NextIntlClientProvider>
            <NextAuthProvider userId={user?.id || 0}>
                <AppProvider>
                    <AppLoader/>
                    <PageLayout>
                        <div className={"mb-20"}>
                            <Header/>
                        </div>
                        {children}
                    </PageLayout>
                </AppProvider>
            </NextAuthProvider>
        </NextIntlClientProvider>
        </body>
    </html>
}