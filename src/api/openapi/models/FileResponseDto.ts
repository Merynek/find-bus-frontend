/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileCategory } from './FileCategory';
import {
    FileCategoryFromJSON,
    FileCategoryFromJSONTyped,
    FileCategoryToJSON,
    FileCategoryToJSONTyped,
} from './FileCategory';
import type { FileType } from './FileType';
import {
    FileTypeFromJSON,
    FileTypeFromJSONTyped,
    FileTypeToJSON,
    FileTypeToJSONTyped,
} from './FileType';

/**
 * 
 * @export
 * @interface FileResponseDto
 */
export interface FileResponseDto {
    /**
     * 
     * @type {number}
     * @memberof FileResponseDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof FileResponseDto
     */
    path: string;
    /**
     * 
     * @type {FileType}
     * @memberof FileResponseDto
     */
    type: FileType;
    /**
     * 
     * @type {FileCategory}
     * @memberof FileResponseDto
     */
    category: FileCategory;
}



/**
 * Check if a given object implements the FileResponseDto interface.
 */
export function instanceOfFileResponseDto(value: object): value is FileResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('path' in value) || value['path'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function FileResponseDtoFromJSON(json: any): FileResponseDto {
    return FileResponseDtoFromJSONTyped(json, false);
}

export function FileResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'path': json['path'],
        'type': FileTypeFromJSON(json['type']),
        'category': FileCategoryFromJSON(json['category']),
    };
}

export function FileResponseDtoToJSON(json: any): FileResponseDto {
    return FileResponseDtoToJSONTyped(json, false);
}

export function FileResponseDtoToJSONTyped(value?: FileResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'path': value['path'],
        'type': FileTypeToJSON(value['type']),
        'category': FileCategoryToJSON(value['category']),
    };
}

