/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StopRequestDto } from './StopRequestDto';
import {
    StopRequestDtoFromJSON,
    StopRequestDtoFromJSONTyped,
    StopRequestDtoToJSON,
    StopRequestDtoToJSONTyped,
} from './StopRequestDto';
import type { DirectionRequestDto } from './DirectionRequestDto';
import {
    DirectionRequestDtoFromJSON,
    DirectionRequestDtoFromJSONTyped,
    DirectionRequestDtoToJSON,
    DirectionRequestDtoToJSONTyped,
} from './DirectionRequestDto';

/**
 * 
 * @export
 * @interface RouteRequestDto
 */
export interface RouteRequestDto {
    /**
     * 
     * @type {Date}
     * @memberof RouteRequestDto
     */
    start: Date;
    /**
     * 
     * @type {StopRequestDto}
     * @memberof RouteRequestDto
     */
    from: StopRequestDto;
    /**
     * 
     * @type {StopRequestDto}
     * @memberof RouteRequestDto
     */
    to: StopRequestDto;
    /**
     * 
     * @type {Date}
     * @memberof RouteRequestDto
     */
    end: Date;
    /**
     * 
     * @type {DirectionRequestDto}
     * @memberof RouteRequestDto
     */
    direction: DirectionRequestDto;
}

/**
 * Check if a given object implements the RouteRequestDto interface.
 */
export function instanceOfRouteRequestDto(value: object): value is RouteRequestDto {
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    return true;
}

export function RouteRequestDtoFromJSON(json: any): RouteRequestDto {
    return RouteRequestDtoFromJSONTyped(json, false);
}

export function RouteRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'start': (new Date(json['start'])),
        'from': StopRequestDtoFromJSON(json['from']),
        'to': StopRequestDtoFromJSON(json['to']),
        'end': (new Date(json['end'])),
        'direction': DirectionRequestDtoFromJSON(json['direction']),
    };
}

export function RouteRequestDtoToJSON(json: any): RouteRequestDto {
    return RouteRequestDtoToJSONTyped(json, false);
}

export function RouteRequestDtoToJSONTyped(value?: RouteRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'start': ((value['start']).toISOString()),
        'from': StopRequestDtoToJSON(value['from']),
        'to': StopRequestDtoToJSON(value['to']),
        'end': ((value['end']).toISOString()),
        'direction': DirectionRequestDtoToJSON(value['direction']),
    };
}

