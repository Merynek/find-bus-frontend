/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransportRequirementsType } from './TransportRequirementsType';
import {
    TransportRequirementsTypeFromJSON,
    TransportRequirementsTypeFromJSONTyped,
    TransportRequirementsTypeToJSON,
    TransportRequirementsTypeToJSONTyped,
} from './TransportRequirementsType';

/**
 * 
 * @export
 * @interface UploadTransportDocumentItemRequestDto
 */
export interface UploadTransportDocumentItemRequestDto {
    /**
     * 
     * @type {TransportRequirementsType}
     * @memberof UploadTransportDocumentItemRequestDto
     */
    type: TransportRequirementsType;
    /**
     * 
     * @type {string}
     * @memberof UploadTransportDocumentItemRequestDto
     */
    clientFileId: string;
    /**
     * 
     * @type {string}
     * @memberof UploadTransportDocumentItemRequestDto
     */
    fileName: string;
}



/**
 * Check if a given object implements the UploadTransportDocumentItemRequestDto interface.
 */
export function instanceOfUploadTransportDocumentItemRequestDto(value: object): value is UploadTransportDocumentItemRequestDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('clientFileId' in value) || value['clientFileId'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    return true;
}

export function UploadTransportDocumentItemRequestDtoFromJSON(json: any): UploadTransportDocumentItemRequestDto {
    return UploadTransportDocumentItemRequestDtoFromJSONTyped(json, false);
}

export function UploadTransportDocumentItemRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadTransportDocumentItemRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': TransportRequirementsTypeFromJSON(json['type']),
        'clientFileId': json['clientFileId'],
        'fileName': json['fileName'],
    };
}

export function UploadTransportDocumentItemRequestDtoToJSON(json: any): UploadTransportDocumentItemRequestDto {
    return UploadTransportDocumentItemRequestDtoToJSONTyped(json, false);
}

export function UploadTransportDocumentItemRequestDtoToJSONTyped(value?: UploadTransportDocumentItemRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': TransportRequirementsTypeToJSON(value['type']),
        'clientFileId': value['clientFileId'],
        'fileName': value['fileName'],
    };
}

