/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailTemplateResponseDto } from './EmailTemplateResponseDto';
import {
    EmailTemplateResponseDtoFromJSON,
    EmailTemplateResponseDtoFromJSONTyped,
    EmailTemplateResponseDtoToJSON,
    EmailTemplateResponseDtoToJSONTyped,
} from './EmailTemplateResponseDto';
import type { EmailConfigResponseDtoUserParams } from './EmailConfigResponseDtoUserParams';
import {
    EmailConfigResponseDtoUserParamsFromJSON,
    EmailConfigResponseDtoUserParamsFromJSONTyped,
    EmailConfigResponseDtoUserParamsToJSON,
    EmailConfigResponseDtoUserParamsToJSONTyped,
} from './EmailConfigResponseDtoUserParams';

/**
 * 
 * @export
 * @interface EmailConfigResponseDto
 */
export interface EmailConfigResponseDto {
    /**
     * 
     * @type {EmailConfigResponseDtoUserParams}
     * @memberof EmailConfigResponseDto
     */
    userParams: EmailConfigResponseDtoUserParams;
    /**
     * 
     * @type {Array<EmailTemplateResponseDto>}
     * @memberof EmailConfigResponseDto
     */
    templates: Array<EmailTemplateResponseDto>;
}

/**
 * Check if a given object implements the EmailConfigResponseDto interface.
 */
export function instanceOfEmailConfigResponseDto(value: object): value is EmailConfigResponseDto {
    if (!('userParams' in value) || value['userParams'] === undefined) return false;
    if (!('templates' in value) || value['templates'] === undefined) return false;
    return true;
}

export function EmailConfigResponseDtoFromJSON(json: any): EmailConfigResponseDto {
    return EmailConfigResponseDtoFromJSONTyped(json, false);
}

export function EmailConfigResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailConfigResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'userParams': EmailConfigResponseDtoUserParamsFromJSON(json['userParams']),
        'templates': ((json['templates'] as Array<any>).map(EmailTemplateResponseDtoFromJSON)),
    };
}

export function EmailConfigResponseDtoToJSON(json: any): EmailConfigResponseDto {
    return EmailConfigResponseDtoToJSONTyped(json, false);
}

export function EmailConfigResponseDtoToJSONTyped(value?: EmailConfigResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userParams': EmailConfigResponseDtoUserParamsToJSON(value['userParams']),
        'templates': ((value['templates'] as Array<any>).map(EmailTemplateResponseDtoToJSON)),
    };
}

