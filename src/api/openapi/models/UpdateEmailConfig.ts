/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailType } from './EmailType';
import {
    EmailTypeFromJSON,
    EmailTypeFromJSONTyped,
    EmailTypeToJSON,
    EmailTypeToJSONTyped,
} from './EmailType';
import type { Languages } from './Languages';
import {
    LanguagesFromJSON,
    LanguagesFromJSONTyped,
    LanguagesToJSON,
    LanguagesToJSONTyped,
} from './Languages';

/**
 * 
 * @export
 * @interface UpdateEmailConfig
 */
export interface UpdateEmailConfig {
    /**
     * 
     * @type {EmailType}
     * @memberof UpdateEmailConfig
     */
    type: EmailType;
    /**
     * 
     * @type {Languages}
     * @memberof UpdateEmailConfig
     */
    language: Languages;
    /**
     * 
     * @type {number}
     * @memberof UpdateEmailConfig
     */
    templateId: number;
}



/**
 * Check if a given object implements the UpdateEmailConfig interface.
 */
export function instanceOfUpdateEmailConfig(value: object): value is UpdateEmailConfig {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('templateId' in value) || value['templateId'] === undefined) return false;
    return true;
}

export function UpdateEmailConfigFromJSON(json: any): UpdateEmailConfig {
    return UpdateEmailConfigFromJSONTyped(json, false);
}

export function UpdateEmailConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateEmailConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'type': EmailTypeFromJSON(json['type']),
        'language': LanguagesFromJSON(json['language']),
        'templateId': json['templateId'],
    };
}

export function UpdateEmailConfigToJSON(json: any): UpdateEmailConfig {
    return UpdateEmailConfigToJSONTyped(json, false);
}

export function UpdateEmailConfigToJSONTyped(value?: UpdateEmailConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': EmailTypeToJSON(value['type']),
        'language': LanguagesToJSON(value['language']),
        'templateId': value['templateId'],
    };
}

