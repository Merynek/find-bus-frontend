/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GeoPointDto } from './GeoPointDto';
import {
    GeoPointDtoFromJSON,
    GeoPointDtoFromJSONTyped,
    GeoPointDtoToJSON,
    GeoPointDtoToJSONTyped,
} from './GeoPointDto';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
    CountryToJSONTyped,
} from './Country';

/**
 * 
 * @export
 * @interface PlaceResponseDto
 */
export interface PlaceResponseDto {
    /**
     * 
     * @type {string}
     * @memberof PlaceResponseDto
     */
    placeId: string;
    /**
     * 
     * @type {GeoPointDto}
     * @memberof PlaceResponseDto
     */
    point: GeoPointDto;
    /**
     * 
     * @type {string}
     * @memberof PlaceResponseDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResponseDto
     */
    placeFormatted: string;
    /**
     * 
     * @type {Country}
     * @memberof PlaceResponseDto
     */
    country: Country;
}



/**
 * Check if a given object implements the PlaceResponseDto interface.
 */
export function instanceOfPlaceResponseDto(value: object): value is PlaceResponseDto {
    if (!('placeId' in value) || value['placeId'] === undefined) return false;
    if (!('point' in value) || value['point'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('placeFormatted' in value) || value['placeFormatted'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    return true;
}

export function PlaceResponseDtoFromJSON(json: any): PlaceResponseDto {
    return PlaceResponseDtoFromJSONTyped(json, false);
}

export function PlaceResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaceResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'placeId': json['placeId'],
        'point': GeoPointDtoFromJSON(json['point']),
        'name': json['name'],
        'placeFormatted': json['placeFormatted'],
        'country': CountryFromJSON(json['country']),
    };
}

export function PlaceResponseDtoToJSON(json: any): PlaceResponseDto {
    return PlaceResponseDtoToJSONTyped(json, false);
}

export function PlaceResponseDtoToJSONTyped(value?: PlaceResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'placeId': value['placeId'],
        'point': GeoPointDtoToJSON(value['point']),
        'name': value['name'],
        'placeFormatted': value['placeFormatted'],
        'country': CountryToJSON(value['country']),
    };
}

