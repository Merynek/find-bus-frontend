/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PriceDto } from './PriceDto';
import {
    PriceDtoFromJSON,
    PriceDtoFromJSONTyped,
    PriceDtoToJSON,
    PriceDtoToJSONTyped,
} from './PriceDto';
import type { FinancialDocumentType } from './FinancialDocumentType';
import {
    FinancialDocumentTypeFromJSON,
    FinancialDocumentTypeFromJSONTyped,
    FinancialDocumentTypeToJSON,
    FinancialDocumentTypeToJSONTyped,
} from './FinancialDocumentType';

/**
 * 
 * @export
 * @interface FinancialDocumentResponseDto
 */
export interface FinancialDocumentResponseDto {
    /**
     * 
     * @type {number}
     * @memberof FinancialDocumentResponseDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof FinancialDocumentResponseDto
     */
    variableSymbol: string;
    /**
     * 
     * @type {string}
     * @memberof FinancialDocumentResponseDto
     */
    internalDocumentNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof FinancialDocumentResponseDto
     */
    dateOfIssue: Date;
    /**
     * 
     * @type {Date}
     * @memberof FinancialDocumentResponseDto
     */
    dueDate: Date;
    /**
     * 
     * @type {FinancialDocumentType}
     * @memberof FinancialDocumentResponseDto
     */
    type: FinancialDocumentType;
    /**
     * 
     * @type {PriceDto}
     * @memberof FinancialDocumentResponseDto
     */
    price: PriceDto;
    /**
     * 
     * @type {boolean}
     * @memberof FinancialDocumentResponseDto
     */
    payed: boolean;
}



/**
 * Check if a given object implements the FinancialDocumentResponseDto interface.
 */
export function instanceOfFinancialDocumentResponseDto(value: object): value is FinancialDocumentResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('variableSymbol' in value) || value['variableSymbol'] === undefined) return false;
    if (!('internalDocumentNumber' in value) || value['internalDocumentNumber'] === undefined) return false;
    if (!('dateOfIssue' in value) || value['dateOfIssue'] === undefined) return false;
    if (!('dueDate' in value) || value['dueDate'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('payed' in value) || value['payed'] === undefined) return false;
    return true;
}

export function FinancialDocumentResponseDtoFromJSON(json: any): FinancialDocumentResponseDto {
    return FinancialDocumentResponseDtoFromJSONTyped(json, false);
}

export function FinancialDocumentResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FinancialDocumentResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'variableSymbol': json['variableSymbol'],
        'internalDocumentNumber': json['internalDocumentNumber'],
        'dateOfIssue': (new Date(json['dateOfIssue'])),
        'dueDate': (new Date(json['dueDate'])),
        'type': FinancialDocumentTypeFromJSON(json['type']),
        'price': PriceDtoFromJSON(json['price']),
        'payed': json['payed'],
    };
}

export function FinancialDocumentResponseDtoToJSON(json: any): FinancialDocumentResponseDto {
    return FinancialDocumentResponseDtoToJSONTyped(json, false);
}

export function FinancialDocumentResponseDtoToJSONTyped(value?: FinancialDocumentResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'variableSymbol': value['variableSymbol'],
        'internalDocumentNumber': value['internalDocumentNumber'],
        'dateOfIssue': ((value['dateOfIssue']).toISOString()),
        'dueDate': ((value['dueDate']).toISOString()),
        'type': FinancialDocumentTypeToJSON(value['type']),
        'price': PriceDtoToJSON(value['price']),
        'payed': value['payed'],
    };
}

