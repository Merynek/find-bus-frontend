/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompletedPublicUploadPhotoItemRequestDto } from './CompletedPublicUploadPhotoItemRequestDto';
import {
    CompletedPublicUploadPhotoItemRequestDtoFromJSON,
    CompletedPublicUploadPhotoItemRequestDtoFromJSONTyped,
    CompletedPublicUploadPhotoItemRequestDtoToJSON,
    CompletedPublicUploadPhotoItemRequestDtoToJSONTyped,
} from './CompletedPublicUploadPhotoItemRequestDto';

/**
 * 
 * @export
 * @interface VehicleCompletePublicUploadPhotosRequestDto
 */
export interface VehicleCompletePublicUploadPhotosRequestDto {
    /**
     * 
     * @type {number}
     * @memberof VehicleCompletePublicUploadPhotosRequestDto
     */
    vehicleId: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof VehicleCompletePublicUploadPhotosRequestDto
     */
    photoIdsToDelete: Array<number>;
    /**
     * 
     * @type {Array<CompletedPublicUploadPhotoItemRequestDto>}
     * @memberof VehicleCompletePublicUploadPhotosRequestDto
     */
    photos: Array<CompletedPublicUploadPhotoItemRequestDto>;
}

/**
 * Check if a given object implements the VehicleCompletePublicUploadPhotosRequestDto interface.
 */
export function instanceOfVehicleCompletePublicUploadPhotosRequestDto(value: object): value is VehicleCompletePublicUploadPhotosRequestDto {
    if (!('vehicleId' in value) || value['vehicleId'] === undefined) return false;
    if (!('photoIdsToDelete' in value) || value['photoIdsToDelete'] === undefined) return false;
    if (!('photos' in value) || value['photos'] === undefined) return false;
    return true;
}

export function VehicleCompletePublicUploadPhotosRequestDtoFromJSON(json: any): VehicleCompletePublicUploadPhotosRequestDto {
    return VehicleCompletePublicUploadPhotosRequestDtoFromJSONTyped(json, false);
}

export function VehicleCompletePublicUploadPhotosRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleCompletePublicUploadPhotosRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'vehicleId': json['vehicleId'],
        'photoIdsToDelete': json['photoIdsToDelete'],
        'photos': ((json['photos'] as Array<any>).map(CompletedPublicUploadPhotoItemRequestDtoFromJSON)),
    };
}

export function VehicleCompletePublicUploadPhotosRequestDtoToJSON(json: any): VehicleCompletePublicUploadPhotosRequestDto {
    return VehicleCompletePublicUploadPhotosRequestDtoToJSONTyped(json, false);
}

export function VehicleCompletePublicUploadPhotosRequestDtoToJSONTyped(value?: VehicleCompletePublicUploadPhotosRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vehicleId': value['vehicleId'],
        'photoIdsToDelete': value['photoIdsToDelete'],
        'photos': ((value['photos'] as Array<any>).map(CompletedPublicUploadPhotoItemRequestDtoToJSON)),
    };
}

