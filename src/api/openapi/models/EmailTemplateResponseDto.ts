/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmailType } from './EmailType';
import {
    EmailTypeFromJSON,
    EmailTypeFromJSONTyped,
    EmailTypeToJSON,
    EmailTypeToJSONTyped,
} from './EmailType';
import type { EmailTemplateResponseDtoParams } from './EmailTemplateResponseDtoParams';
import {
    EmailTemplateResponseDtoParamsFromJSON,
    EmailTemplateResponseDtoParamsFromJSONTyped,
    EmailTemplateResponseDtoParamsToJSON,
    EmailTemplateResponseDtoParamsToJSONTyped,
} from './EmailTemplateResponseDtoParams';
import type { EmailConfigLocalizationResponseDto } from './EmailConfigLocalizationResponseDto';
import {
    EmailConfigLocalizationResponseDtoFromJSON,
    EmailConfigLocalizationResponseDtoFromJSONTyped,
    EmailConfigLocalizationResponseDtoToJSON,
    EmailConfigLocalizationResponseDtoToJSONTyped,
} from './EmailConfigLocalizationResponseDto';

/**
 * 
 * @export
 * @interface EmailTemplateResponseDto
 */
export interface EmailTemplateResponseDto {
    /**
     * 
     * @type {EmailTemplateResponseDtoParams}
     * @memberof EmailTemplateResponseDto
     */
    params: EmailTemplateResponseDtoParams;
    /**
     * 
     * @type {EmailType}
     * @memberof EmailTemplateResponseDto
     */
    type: EmailType;
    /**
     * 
     * @type {Array<EmailConfigLocalizationResponseDto>}
     * @memberof EmailTemplateResponseDto
     */
    localizations: Array<EmailConfigLocalizationResponseDto>;
}



/**
 * Check if a given object implements the EmailTemplateResponseDto interface.
 */
export function instanceOfEmailTemplateResponseDto(value: object): value is EmailTemplateResponseDto {
    if (!('params' in value) || value['params'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('localizations' in value) || value['localizations'] === undefined) return false;
    return true;
}

export function EmailTemplateResponseDtoFromJSON(json: any): EmailTemplateResponseDto {
    return EmailTemplateResponseDtoFromJSONTyped(json, false);
}

export function EmailTemplateResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailTemplateResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'params': EmailTemplateResponseDtoParamsFromJSON(json['params']),
        'type': EmailTypeFromJSON(json['type']),
        'localizations': ((json['localizations'] as Array<any>).map(EmailConfigLocalizationResponseDtoFromJSON)),
    };
}

export function EmailTemplateResponseDtoToJSON(json: any): EmailTemplateResponseDto {
    return EmailTemplateResponseDtoToJSONTyped(json, false);
}

export function EmailTemplateResponseDtoToJSONTyped(value?: EmailTemplateResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'params': EmailTemplateResponseDtoParamsToJSON(value['params']),
        'type': EmailTypeToJSON(value['type']),
        'localizations': ((value['localizations'] as Array<any>).map(EmailConfigLocalizationResponseDtoToJSON)),
    };
}

