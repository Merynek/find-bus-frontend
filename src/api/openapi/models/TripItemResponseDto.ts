/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RouteResponseDto } from './RouteResponseDto';
import {
    RouteResponseDtoFromJSON,
    RouteResponseDtoFromJSONTyped,
    RouteResponseDtoToJSON,
    RouteResponseDtoToJSONTyped,
} from './RouteResponseDto';
import type { Amenities } from './Amenities';
import {
    AmenitiesFromJSON,
    AmenitiesFromJSONTyped,
    AmenitiesToJSON,
    AmenitiesToJSONTyped,
} from './Amenities';
import type { TripOfferState } from './TripOfferState';
import {
    TripOfferStateFromJSON,
    TripOfferStateFromJSONTyped,
    TripOfferStateToJSON,
    TripOfferStateToJSONTyped,
} from './TripOfferState';

/**
 * 
 * @export
 * @interface TripItemResponseDto
 */
export interface TripItemResponseDto {
    /**
     * 
     * @type {number}
     * @memberof TripItemResponseDto
     */
    id: number;
    /**
     * 
     * @type {Array<RouteResponseDto>}
     * @memberof TripItemResponseDto
     */
    routes: Array<RouteResponseDto>;
    /**
     * 
     * @type {Array<Amenities>}
     * @memberof TripItemResponseDto
     */
    amenities: Array<Amenities>;
    /**
     * 
     * @type {number}
     * @memberof TripItemResponseDto
     */
    numberOfPersons: number;
    /**
     * 
     * @type {number}
     * @memberof TripItemResponseDto
     */
    totalDistanceInMeters: number;
    /**
     * 
     * @type {number}
     * @memberof TripItemResponseDto
     */
    handicappedUserCount: number;
    /**
     * 
     * @type {boolean}
     * @memberof TripItemResponseDto
     */
    dietForTransporter: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TripItemResponseDto
     */
    endOffer: Date;
    /**
     * 
     * @type {boolean}
     * @memberof TripItemResponseDto
     */
    offerHasEnded: boolean;
    /**
     * 
     * @type {TripOfferState}
     * @memberof TripItemResponseDto
     */
    offerState: TripOfferState;
    /**
     * 
     * @type {boolean}
     * @memberof TripItemResponseDto
     */
    alreadyOffered: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TripItemResponseDto
     */
    isMine: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TripItemResponseDto
     */
    hasOffers: boolean;
    /**
     * 
     * @type {Date}
     * @memberof TripItemResponseDto
     */
    created: Date;
}



/**
 * Check if a given object implements the TripItemResponseDto interface.
 */
export function instanceOfTripItemResponseDto(value: object): value is TripItemResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('routes' in value) || value['routes'] === undefined) return false;
    if (!('amenities' in value) || value['amenities'] === undefined) return false;
    if (!('numberOfPersons' in value) || value['numberOfPersons'] === undefined) return false;
    if (!('totalDistanceInMeters' in value) || value['totalDistanceInMeters'] === undefined) return false;
    if (!('handicappedUserCount' in value) || value['handicappedUserCount'] === undefined) return false;
    if (!('dietForTransporter' in value) || value['dietForTransporter'] === undefined) return false;
    if (!('endOffer' in value) || value['endOffer'] === undefined) return false;
    if (!('offerHasEnded' in value) || value['offerHasEnded'] === undefined) return false;
    if (!('offerState' in value) || value['offerState'] === undefined) return false;
    if (!('alreadyOffered' in value) || value['alreadyOffered'] === undefined) return false;
    if (!('isMine' in value) || value['isMine'] === undefined) return false;
    if (!('hasOffers' in value) || value['hasOffers'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function TripItemResponseDtoFromJSON(json: any): TripItemResponseDto {
    return TripItemResponseDtoFromJSONTyped(json, false);
}

export function TripItemResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TripItemResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'routes': ((json['routes'] as Array<any>).map(RouteResponseDtoFromJSON)),
        'amenities': ((json['amenities'] as Array<any>).map(AmenitiesFromJSON)),
        'numberOfPersons': json['numberOfPersons'],
        'totalDistanceInMeters': json['totalDistanceInMeters'],
        'handicappedUserCount': json['handicappedUserCount'],
        'dietForTransporter': json['dietForTransporter'],
        'endOffer': (new Date(json['endOffer'])),
        'offerHasEnded': json['offerHasEnded'],
        'offerState': TripOfferStateFromJSON(json['offerState']),
        'alreadyOffered': json['alreadyOffered'],
        'isMine': json['isMine'],
        'hasOffers': json['hasOffers'],
        'created': (new Date(json['created'])),
    };
}

export function TripItemResponseDtoToJSON(json: any): TripItemResponseDto {
    return TripItemResponseDtoToJSONTyped(json, false);
}

export function TripItemResponseDtoToJSONTyped(value?: TripItemResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'routes': ((value['routes'] as Array<any>).map(RouteResponseDtoToJSON)),
        'amenities': ((value['amenities'] as Array<any>).map(AmenitiesToJSON)),
        'numberOfPersons': value['numberOfPersons'],
        'totalDistanceInMeters': value['totalDistanceInMeters'],
        'handicappedUserCount': value['handicappedUserCount'],
        'dietForTransporter': value['dietForTransporter'],
        'endOffer': ((value['endOffer']).toISOString()),
        'offerHasEnded': value['offerHasEnded'],
        'offerState': TripOfferStateToJSON(value['offerState']),
        'alreadyOffered': value['alreadyOffered'],
        'isMine': value['isMine'],
        'hasOffers': value['hasOffers'],
        'created': ((value['created']).toISOString()),
    };
}

