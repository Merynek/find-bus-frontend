/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransportRequirementsType } from './TransportRequirementsType';
import {
    TransportRequirementsTypeFromJSON,
    TransportRequirementsTypeFromJSONTyped,
    TransportRequirementsTypeToJSON,
    TransportRequirementsTypeToJSONTyped,
} from './TransportRequirementsType';

/**
 * 
 * @export
 * @interface CompletedTransportUploadDocumentItemRequestDto
 */
export interface CompletedTransportUploadDocumentItemRequestDto {
    /**
     * 
     * @type {TransportRequirementsType}
     * @memberof CompletedTransportUploadDocumentItemRequestDto
     */
    type: TransportRequirementsType;
    /**
     * 
     * @type {string}
     * @memberof CompletedTransportUploadDocumentItemRequestDto
     */
    blobName: string;
    /**
     * 
     * @type {string}
     * @memberof CompletedTransportUploadDocumentItemRequestDto
     */
    contentType: string;
    /**
     * 
     * @type {number}
     * @memberof CompletedTransportUploadDocumentItemRequestDto
     */
    fileSize: number;
    /**
     * 
     * @type {string}
     * @memberof CompletedTransportUploadDocumentItemRequestDto
     */
    originalFileName: string;
}



/**
 * Check if a given object implements the CompletedTransportUploadDocumentItemRequestDto interface.
 */
export function instanceOfCompletedTransportUploadDocumentItemRequestDto(value: object): value is CompletedTransportUploadDocumentItemRequestDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('blobName' in value) || value['blobName'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('fileSize' in value) || value['fileSize'] === undefined) return false;
    if (!('originalFileName' in value) || value['originalFileName'] === undefined) return false;
    return true;
}

export function CompletedTransportUploadDocumentItemRequestDtoFromJSON(json: any): CompletedTransportUploadDocumentItemRequestDto {
    return CompletedTransportUploadDocumentItemRequestDtoFromJSONTyped(json, false);
}

export function CompletedTransportUploadDocumentItemRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompletedTransportUploadDocumentItemRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': TransportRequirementsTypeFromJSON(json['type']),
        'blobName': json['blobName'],
        'contentType': json['contentType'],
        'fileSize': json['fileSize'],
        'originalFileName': json['originalFileName'],
    };
}

export function CompletedTransportUploadDocumentItemRequestDtoToJSON(json: any): CompletedTransportUploadDocumentItemRequestDto {
    return CompletedTransportUploadDocumentItemRequestDtoToJSONTyped(json, false);
}

export function CompletedTransportUploadDocumentItemRequestDtoToJSONTyped(value?: CompletedTransportUploadDocumentItemRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': TransportRequirementsTypeToJSON(value['type']),
        'blobName': value['blobName'],
        'contentType': value['contentType'],
        'fileSize': value['fileSize'],
        'originalFileName': value['originalFileName'],
    };
}

