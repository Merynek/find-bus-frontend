/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GeoPoint } from './GeoPoint';
import {
    GeoPointFromJSON,
    GeoPointFromJSONTyped,
    GeoPointToJSON,
    GeoPointToJSONTyped,
} from './GeoPoint';
import type { Country } from './Country';
import {
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
    CountryToJSONTyped,
} from './Country';

/**
 * 
 * @export
 * @interface PlaceRequestDto
 */
export interface PlaceRequestDto {
    /**
     * 
     * @type {string}
     * @memberof PlaceRequestDto
     */
    placeId: string;
    /**
     * 
     * @type {GeoPoint}
     * @memberof PlaceRequestDto
     */
    point: GeoPoint;
    /**
     * 
     * @type {Country}
     * @memberof PlaceRequestDto
     */
    country: Country;
    /**
     * 
     * @type {string}
     * @memberof PlaceRequestDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceRequestDto
     */
    placeFormatted: string;
}



/**
 * Check if a given object implements the PlaceRequestDto interface.
 */
export function instanceOfPlaceRequestDto(value: object): value is PlaceRequestDto {
    if (!('placeId' in value) || value['placeId'] === undefined) return false;
    if (!('point' in value) || value['point'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('placeFormatted' in value) || value['placeFormatted'] === undefined) return false;
    return true;
}

export function PlaceRequestDtoFromJSON(json: any): PlaceRequestDto {
    return PlaceRequestDtoFromJSONTyped(json, false);
}

export function PlaceRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaceRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'placeId': json['placeId'],
        'point': GeoPointFromJSON(json['point']),
        'country': CountryFromJSON(json['country']),
        'name': json['name'],
        'placeFormatted': json['placeFormatted'],
    };
}

export function PlaceRequestDtoToJSON(json: any): PlaceRequestDto {
    return PlaceRequestDtoToJSONTyped(json, false);
}

export function PlaceRequestDtoToJSONTyped(value?: PlaceRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'placeId': value['placeId'],
        'point': GeoPointToJSON(value['point']),
        'country': CountryToJSON(value['country']),
        'name': value['name'],
        'placeFormatted': value['placeFormatted'],
    };
}

