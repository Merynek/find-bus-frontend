/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompletedUploadDocumentItemRequestDto } from './CompletedUploadDocumentItemRequestDto';
import {
    CompletedUploadDocumentItemRequestDtoFromJSON,
    CompletedUploadDocumentItemRequestDtoFromJSONTyped,
    CompletedUploadDocumentItemRequestDtoToJSON,
    CompletedUploadDocumentItemRequestDtoToJSONTyped,
} from './CompletedUploadDocumentItemRequestDto';
import type { CompletedUploadPhotoItemRequestDto } from './CompletedUploadPhotoItemRequestDto';
import {
    CompletedUploadPhotoItemRequestDtoFromJSON,
    CompletedUploadPhotoItemRequestDtoFromJSONTyped,
    CompletedUploadPhotoItemRequestDtoToJSON,
    CompletedUploadPhotoItemRequestDtoToJSONTyped,
} from './CompletedUploadPhotoItemRequestDto';

/**
 * 
 * @export
 * @interface VehicleCompleteUploadFilesRequestDto
 */
export interface VehicleCompleteUploadFilesRequestDto {
    /**
     * 
     * @type {number}
     * @memberof VehicleCompleteUploadFilesRequestDto
     */
    vehicleId: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof VehicleCompleteUploadFilesRequestDto
     */
    photoIdsToDelete: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof VehicleCompleteUploadFilesRequestDto
     */
    documentIdsToDelete: Array<number>;
    /**
     * 
     * @type {Array<CompletedUploadPhotoItemRequestDto>}
     * @memberof VehicleCompleteUploadFilesRequestDto
     */
    photos: Array<CompletedUploadPhotoItemRequestDto>;
    /**
     * 
     * @type {Array<CompletedUploadDocumentItemRequestDto>}
     * @memberof VehicleCompleteUploadFilesRequestDto
     */
    documents: Array<CompletedUploadDocumentItemRequestDto>;
}

/**
 * Check if a given object implements the VehicleCompleteUploadFilesRequestDto interface.
 */
export function instanceOfVehicleCompleteUploadFilesRequestDto(value: object): value is VehicleCompleteUploadFilesRequestDto {
    if (!('vehicleId' in value) || value['vehicleId'] === undefined) return false;
    if (!('photoIdsToDelete' in value) || value['photoIdsToDelete'] === undefined) return false;
    if (!('documentIdsToDelete' in value) || value['documentIdsToDelete'] === undefined) return false;
    if (!('photos' in value) || value['photos'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    return true;
}

export function VehicleCompleteUploadFilesRequestDtoFromJSON(json: any): VehicleCompleteUploadFilesRequestDto {
    return VehicleCompleteUploadFilesRequestDtoFromJSONTyped(json, false);
}

export function VehicleCompleteUploadFilesRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleCompleteUploadFilesRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'vehicleId': json['vehicleId'],
        'photoIdsToDelete': json['photoIdsToDelete'],
        'documentIdsToDelete': json['documentIdsToDelete'],
        'photos': ((json['photos'] as Array<any>).map(CompletedUploadPhotoItemRequestDtoFromJSON)),
        'documents': ((json['documents'] as Array<any>).map(CompletedUploadDocumentItemRequestDtoFromJSON)),
    };
}

export function VehicleCompleteUploadFilesRequestDtoToJSON(json: any): VehicleCompleteUploadFilesRequestDto {
    return VehicleCompleteUploadFilesRequestDtoToJSONTyped(json, false);
}

export function VehicleCompleteUploadFilesRequestDtoToJSONTyped(value?: VehicleCompleteUploadFilesRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vehicleId': value['vehicleId'],
        'photoIdsToDelete': value['photoIdsToDelete'],
        'documentIdsToDelete': value['documentIdsToDelete'],
        'photos': ((value['photos'] as Array<any>).map(CompletedUploadPhotoItemRequestDtoToJSON)),
        'documents': ((value['documents'] as Array<any>).map(CompletedUploadDocumentItemRequestDtoToJSON)),
    };
}

