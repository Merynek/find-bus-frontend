/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DirectionResponseDto } from './DirectionResponseDto';
import {
    DirectionResponseDtoFromJSON,
    DirectionResponseDtoFromJSONTyped,
    DirectionResponseDtoToJSON,
    DirectionResponseDtoToJSONTyped,
} from './DirectionResponseDto';
import type { StopResponseDto } from './StopResponseDto';
import {
    StopResponseDtoFromJSON,
    StopResponseDtoFromJSONTyped,
    StopResponseDtoToJSON,
    StopResponseDtoToJSONTyped,
} from './StopResponseDto';

/**
 * 
 * @export
 * @interface RouteResponseDto
 */
export interface RouteResponseDto {
    /**
     * 
     * @type {Date}
     * @memberof RouteResponseDto
     */
    start: Date;
    /**
     * 
     * @type {StopResponseDto}
     * @memberof RouteResponseDto
     */
    from: StopResponseDto;
    /**
     * 
     * @type {StopResponseDto}
     * @memberof RouteResponseDto
     */
    to: StopResponseDto;
    /**
     * 
     * @type {Date}
     * @memberof RouteResponseDto
     */
    end: Date;
    /**
     * 
     * @type {DirectionResponseDto}
     * @memberof RouteResponseDto
     */
    direction: DirectionResponseDto;
}

/**
 * Check if a given object implements the RouteResponseDto interface.
 */
export function instanceOfRouteResponseDto(value: object): value is RouteResponseDto {
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    if (!('direction' in value) || value['direction'] === undefined) return false;
    return true;
}

export function RouteResponseDtoFromJSON(json: any): RouteResponseDto {
    return RouteResponseDtoFromJSONTyped(json, false);
}

export function RouteResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'start': (new Date(json['start'])),
        'from': StopResponseDtoFromJSON(json['from']),
        'to': StopResponseDtoFromJSON(json['to']),
        'end': (new Date(json['end'])),
        'direction': DirectionResponseDtoFromJSON(json['direction']),
    };
}

export function RouteResponseDtoToJSON(json: any): RouteResponseDto {
    return RouteResponseDtoToJSONTyped(json, false);
}

export function RouteResponseDtoToJSONTyped(value?: RouteResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'start': ((value['start']).toISOString()),
        'from': StopResponseDtoToJSON(value['from']),
        'to': StopResponseDtoToJSON(value['to']),
        'end': ((value['end']).toISOString()),
        'direction': DirectionResponseDtoToJSON(value['direction']),
    };
}

