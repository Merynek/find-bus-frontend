/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const Currency = {
    ALL: 'ALL',
    DZD: 'DZD',
    ARS: 'ARS',
    AUD: 'AUD',
    BHD: 'BHD',
    BDT: 'BDT',
    AMD: 'AMD',
    BOB: 'BOB',
    BZD: 'BZD',
    BND: 'BND',
    KHR: 'KHR',
    CAD: 'CAD',
    LKR: 'LKR',
    CLP: 'CLP',
    CNY: 'CNY',
    COP: 'COP',
    CRC: 'CRC',
    HRK: 'HRK',
    CZK: 'CZK',
    DKK: 'DKK',
    DOP: 'DOP',
    ETB: 'ETB',
    EEK: 'EEK',
    GTQ: 'GTQ',
    HNL: 'HNL',
    HKD: 'HKD',
    HUF: 'HUF',
    ISK: 'ISK',
    INR: 'INR',
    IDR: 'IDR',
    IRR: 'IRR',
    IQD: 'IQD',
    ILS: 'ILS',
    JMD: 'JMD',
    JPY: 'JPY',
    KZT: 'KZT',
    JOD: 'JOD',
    KES: 'KES',
    KRW: 'KRW',
    KWD: 'KWD',
    KGS: 'KGS',
    LAK: 'LAK',
    LBP: 'LBP',
    LVL: 'LVL',
    LYD: 'LYD',
    LTL: 'LTL',
    MOP: 'MOP',
    MYR: 'MYR',
    MVR: 'MVR',
    MXN: 'MXN',
    MNT: 'MNT',
    MAD: 'MAD',
    OMR: 'OMR',
    NPR: 'NPR',
    NZD: 'NZD',
    NIO: 'NIO',
    NOK: 'NOK',
    PKR: 'PKR',
    PAB: 'PAB',
    PYG: 'PYG',
    PEN: 'PEN',
    PHP: 'PHP',
    QAR: 'QAR',
    RUB: 'RUB',
    RWF: 'RWF',
    SAR: 'SAR',
    SGD: 'SGD',
    VND: 'VND',
    ZAR: 'ZAR',
    SEK: 'SEK',
    CHF: 'CHF',
    SYP: 'SYP',
    THB: 'THB',
    TTD: 'TTD',
    AED: 'AED',
    TND: 'TND',
    MKD: 'MKD',
    EGP: 'EGP',
    GBP: 'GBP',
    USD: 'USD',
    UYU: 'UYU',
    UZS: 'UZS',
    YER: 'YER',
    TWD: 'TWD',
    ZWL: 'ZWL',
    VEF: 'VEF',
    RSD: 'RSD',
    AZN: 'AZN',
    RON: 'RON',
    TRY: 'TRY',
    XOF: 'XOF',
    AFN: 'AFN',
    TJS: 'TJS',
    BYR: 'BYR',
    BGN: 'BGN',
    BAM: 'BAM',
    EUR: 'EUR',
    UAH: 'UAH',
    GEL: 'GEL',
    PLN: 'PLN',
    BRL: 'BRL'
} as const;
export type Currency = typeof Currency[keyof typeof Currency];


export function instanceOfCurrency(value: any): boolean {
    for (const key in Currency) {
        if (Object.prototype.hasOwnProperty.call(Currency, key)) {
            if (Currency[key as keyof typeof Currency] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CurrencyFromJSON(json: any): Currency {
    return CurrencyFromJSONTyped(json, false);
}

export function CurrencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Currency {
    return json as Currency;
}

export function CurrencyToJSON(value?: Currency | null): any {
    return value as any;
}

export function CurrencyToJSONTyped(value: any, ignoreDiscriminator: boolean): Currency {
    return value as Currency;
}

