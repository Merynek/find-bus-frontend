/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompletedTransportUploadDocumentItemRequestDto } from './CompletedTransportUploadDocumentItemRequestDto';
import {
    CompletedTransportUploadDocumentItemRequestDtoFromJSON,
    CompletedTransportUploadDocumentItemRequestDtoFromJSONTyped,
    CompletedTransportUploadDocumentItemRequestDtoToJSON,
    CompletedTransportUploadDocumentItemRequestDtoToJSONTyped,
} from './CompletedTransportUploadDocumentItemRequestDto';

/**
 * 
 * @export
 * @interface TransportDocumentsCompleteUploadFilesRequestDto
 */
export interface TransportDocumentsCompleteUploadFilesRequestDto {
    /**
     * 
     * @type {number}
     * @memberof TransportDocumentsCompleteUploadFilesRequestDto
     */
    requirementsId: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof TransportDocumentsCompleteUploadFilesRequestDto
     */
    documentIdsToDelete: Array<number>;
    /**
     * 
     * @type {Array<CompletedTransportUploadDocumentItemRequestDto>}
     * @memberof TransportDocumentsCompleteUploadFilesRequestDto
     */
    documents: Array<CompletedTransportUploadDocumentItemRequestDto>;
}

/**
 * Check if a given object implements the TransportDocumentsCompleteUploadFilesRequestDto interface.
 */
export function instanceOfTransportDocumentsCompleteUploadFilesRequestDto(value: object): value is TransportDocumentsCompleteUploadFilesRequestDto {
    if (!('requirementsId' in value) || value['requirementsId'] === undefined) return false;
    if (!('documentIdsToDelete' in value) || value['documentIdsToDelete'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    return true;
}

export function TransportDocumentsCompleteUploadFilesRequestDtoFromJSON(json: any): TransportDocumentsCompleteUploadFilesRequestDto {
    return TransportDocumentsCompleteUploadFilesRequestDtoFromJSONTyped(json, false);
}

export function TransportDocumentsCompleteUploadFilesRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransportDocumentsCompleteUploadFilesRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'requirementsId': json['requirementsId'],
        'documentIdsToDelete': json['documentIdsToDelete'],
        'documents': ((json['documents'] as Array<any>).map(CompletedTransportUploadDocumentItemRequestDtoFromJSON)),
    };
}

export function TransportDocumentsCompleteUploadFilesRequestDtoToJSON(json: any): TransportDocumentsCompleteUploadFilesRequestDto {
    return TransportDocumentsCompleteUploadFilesRequestDtoToJSONTyped(json, false);
}

export function TransportDocumentsCompleteUploadFilesRequestDtoToJSONTyped(value?: TransportDocumentsCompleteUploadFilesRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'requirementsId': value['requirementsId'],
        'documentIdsToDelete': value['documentIdsToDelete'],
        'documents': ((value['documents'] as Array<any>).map(CompletedTransportUploadDocumentItemRequestDtoToJSON)),
    };
}

