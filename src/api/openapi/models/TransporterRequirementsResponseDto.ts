/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransportRequirementStatus } from './TransportRequirementStatus';
import {
    TransportRequirementStatusFromJSON,
    TransportRequirementStatusFromJSONTyped,
    TransportRequirementStatusToJSON,
    TransportRequirementStatusToJSONTyped,
} from './TransportRequirementStatus';
import type { TransportDocumentResponseDto } from './TransportDocumentResponseDto';
import {
    TransportDocumentResponseDtoFromJSON,
    TransportDocumentResponseDtoFromJSONTyped,
    TransportDocumentResponseDtoToJSON,
    TransportDocumentResponseDtoToJSONTyped,
} from './TransportDocumentResponseDto';
import type { VerificationFeedbackResponseDto } from './VerificationFeedbackResponseDto';
import {
    VerificationFeedbackResponseDtoFromJSON,
    VerificationFeedbackResponseDtoFromJSONTyped,
    VerificationFeedbackResponseDtoToJSON,
    VerificationFeedbackResponseDtoToJSONTyped,
} from './VerificationFeedbackResponseDto';

/**
 * 
 * @export
 * @interface TransporterRequirementsResponseDto
 */
export interface TransporterRequirementsResponseDto {
    /**
     * 
     * @type {number}
     * @memberof TransporterRequirementsResponseDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof TransporterRequirementsResponseDto
     */
    concessionNumber: string;
    /**
     * 
     * @type {TransportRequirementStatus}
     * @memberof TransporterRequirementsResponseDto
     */
    status: TransportRequirementStatus;
    /**
     * 
     * @type {VerificationFeedbackResponseDto}
     * @memberof TransporterRequirementsResponseDto
     */
    verificationFeedback?: VerificationFeedbackResponseDto;
    /**
     * 
     * @type {Array<TransportDocumentResponseDto>}
     * @memberof TransporterRequirementsResponseDto
     */
    documents: Array<TransportDocumentResponseDto>;
}



/**
 * Check if a given object implements the TransporterRequirementsResponseDto interface.
 */
export function instanceOfTransporterRequirementsResponseDto(value: object): value is TransporterRequirementsResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('concessionNumber' in value) || value['concessionNumber'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('documents' in value) || value['documents'] === undefined) return false;
    return true;
}

export function TransporterRequirementsResponseDtoFromJSON(json: any): TransporterRequirementsResponseDto {
    return TransporterRequirementsResponseDtoFromJSONTyped(json, false);
}

export function TransporterRequirementsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransporterRequirementsResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'concessionNumber': json['concessionNumber'],
        'status': TransportRequirementStatusFromJSON(json['status']),
        'verificationFeedback': json['verificationFeedback'] == null ? undefined : VerificationFeedbackResponseDtoFromJSON(json['verificationFeedback']),
        'documents': ((json['documents'] as Array<any>).map(TransportDocumentResponseDtoFromJSON)),
    };
}

export function TransporterRequirementsResponseDtoToJSON(json: any): TransporterRequirementsResponseDto {
    return TransporterRequirementsResponseDtoToJSONTyped(json, false);
}

export function TransporterRequirementsResponseDtoToJSONTyped(value?: TransporterRequirementsResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'concessionNumber': value['concessionNumber'],
        'status': TransportRequirementStatusToJSON(value['status']),
        'verificationFeedback': VerificationFeedbackResponseDtoToJSON(value['verificationFeedback']),
        'documents': ((value['documents'] as Array<any>).map(TransportDocumentResponseDtoToJSON)),
    };
}

