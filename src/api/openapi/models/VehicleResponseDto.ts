/* tslint:disable */
/* eslint-disable */
/**
 * My API Merin
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EuroStandard } from './EuroStandard';
import {
    EuroStandardFromJSON,
    EuroStandardFromJSONTyped,
    EuroStandardToJSON,
    EuroStandardToJSONTyped,
} from './EuroStandard';
import type { VehicleDocumentResponseDto } from './VehicleDocumentResponseDto';
import {
    VehicleDocumentResponseDtoFromJSON,
    VehicleDocumentResponseDtoFromJSONTyped,
    VehicleDocumentResponseDtoToJSON,
    VehicleDocumentResponseDtoToJSONTyped,
} from './VehicleDocumentResponseDto';
import type { VerificationFeedbackResponseDto } from './VerificationFeedbackResponseDto';
import {
    VerificationFeedbackResponseDtoFromJSON,
    VerificationFeedbackResponseDtoFromJSONTyped,
    VerificationFeedbackResponseDtoToJSON,
    VerificationFeedbackResponseDtoToJSONTyped,
} from './VerificationFeedbackResponseDto';
import type { VehiclePhotoResponseDto } from './VehiclePhotoResponseDto';
import {
    VehiclePhotoResponseDtoFromJSON,
    VehiclePhotoResponseDtoFromJSONTyped,
    VehiclePhotoResponseDtoToJSON,
    VehiclePhotoResponseDtoToJSONTyped,
} from './VehiclePhotoResponseDto';
import type { PlaceResponseDto } from './PlaceResponseDto';
import {
    PlaceResponseDtoFromJSON,
    PlaceResponseDtoFromJSONTyped,
    PlaceResponseDtoToJSON,
    PlaceResponseDtoToJSONTyped,
} from './PlaceResponseDto';
import type { VehicleStatus } from './VehicleStatus';
import {
    VehicleStatusFromJSON,
    VehicleStatusFromJSONTyped,
    VehicleStatusToJSON,
    VehicleStatusToJSONTyped,
} from './VehicleStatus';
import type { Amenities } from './Amenities';
import {
    AmenitiesFromJSON,
    AmenitiesFromJSONTyped,
    AmenitiesToJSON,
    AmenitiesToJSONTyped,
} from './Amenities';

/**
 * 
 * @export
 * @interface VehicleResponseDto
 */
export interface VehicleResponseDto {
    /**
     * 
     * @type {number}
     * @memberof VehicleResponseDto
     */
    id: number;
    /**
     * 
     * @type {VehicleStatus}
     * @memberof VehicleResponseDto
     */
    status: VehicleStatus;
    /**
     * 
     * @type {string}
     * @memberof VehicleResponseDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof VehicleResponseDto
     */
    registrationSign: string;
    /**
     * 
     * @type {string}
     * @memberof VehicleResponseDto
     */
    vin: string;
    /**
     * 
     * @type {Date}
     * @memberof VehicleResponseDto
     */
    stkExpired: Date;
    /**
     * 
     * @type {number}
     * @memberof VehicleResponseDto
     */
    yearOfManufacture: number;
    /**
     * 
     * @type {number}
     * @memberof VehicleResponseDto
     */
    personsCapacity: number;
    /**
     * 
     * @type {EuroStandard}
     * @memberof VehicleResponseDto
     */
    euro: EuroStandard;
    /**
     * 
     * @type {Array<Amenities>}
     * @memberof VehicleResponseDto
     */
    amenities: Array<Amenities>;
    /**
     * 
     * @type {number}
     * @memberof VehicleResponseDto
     */
    handicappedUserCount: number;
    /**
     * 
     * @type {PlaceResponseDto}
     * @memberof VehicleResponseDto
     */
    departureStation?: PlaceResponseDto;
    /**
     * 
     * @type {VerificationFeedbackResponseDto}
     * @memberof VehicleResponseDto
     */
    verificationFeedback?: VerificationFeedbackResponseDto;
    /**
     * 
     * @type {Array<VehiclePhotoResponseDto>}
     * @memberof VehicleResponseDto
     */
    vehiclePhotos: Array<VehiclePhotoResponseDto>;
    /**
     * 
     * @type {Array<VehicleDocumentResponseDto>}
     * @memberof VehicleResponseDto
     */
    vehicleDocuments: Array<VehicleDocumentResponseDto>;
}



/**
 * Check if a given object implements the VehicleResponseDto interface.
 */
export function instanceOfVehicleResponseDto(value: object): value is VehicleResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('registrationSign' in value) || value['registrationSign'] === undefined) return false;
    if (!('vin' in value) || value['vin'] === undefined) return false;
    if (!('stkExpired' in value) || value['stkExpired'] === undefined) return false;
    if (!('yearOfManufacture' in value) || value['yearOfManufacture'] === undefined) return false;
    if (!('personsCapacity' in value) || value['personsCapacity'] === undefined) return false;
    if (!('euro' in value) || value['euro'] === undefined) return false;
    if (!('amenities' in value) || value['amenities'] === undefined) return false;
    if (!('handicappedUserCount' in value) || value['handicappedUserCount'] === undefined) return false;
    if (!('vehiclePhotos' in value) || value['vehiclePhotos'] === undefined) return false;
    if (!('vehicleDocuments' in value) || value['vehicleDocuments'] === undefined) return false;
    return true;
}

export function VehicleResponseDtoFromJSON(json: any): VehicleResponseDto {
    return VehicleResponseDtoFromJSONTyped(json, false);
}

export function VehicleResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': VehicleStatusFromJSON(json['status']),
        'name': json['name'],
        'registrationSign': json['registrationSign'],
        'vin': json['vin'],
        'stkExpired': (new Date(json['stkExpired'])),
        'yearOfManufacture': json['yearOfManufacture'],
        'personsCapacity': json['personsCapacity'],
        'euro': EuroStandardFromJSON(json['euro']),
        'amenities': ((json['amenities'] as Array<any>).map(AmenitiesFromJSON)),
        'handicappedUserCount': json['handicappedUserCount'],
        'departureStation': json['departureStation'] == null ? undefined : PlaceResponseDtoFromJSON(json['departureStation']),
        'verificationFeedback': json['verificationFeedback'] == null ? undefined : VerificationFeedbackResponseDtoFromJSON(json['verificationFeedback']),
        'vehiclePhotos': ((json['vehiclePhotos'] as Array<any>).map(VehiclePhotoResponseDtoFromJSON)),
        'vehicleDocuments': ((json['vehicleDocuments'] as Array<any>).map(VehicleDocumentResponseDtoFromJSON)),
    };
}

export function VehicleResponseDtoToJSON(json: any): VehicleResponseDto {
    return VehicleResponseDtoToJSONTyped(json, false);
}

export function VehicleResponseDtoToJSONTyped(value?: VehicleResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'status': VehicleStatusToJSON(value['status']),
        'name': value['name'],
        'registrationSign': value['registrationSign'],
        'vin': value['vin'],
        'stkExpired': ((value['stkExpired']).toISOString()),
        'yearOfManufacture': value['yearOfManufacture'],
        'personsCapacity': value['personsCapacity'],
        'euro': EuroStandardToJSON(value['euro']),
        'amenities': ((value['amenities'] as Array<any>).map(AmenitiesToJSON)),
        'handicappedUserCount': value['handicappedUserCount'],
        'departureStation': PlaceResponseDtoToJSON(value['departureStation']),
        'verificationFeedback': VerificationFeedbackResponseDtoToJSON(value['verificationFeedback']),
        'vehiclePhotos': ((value['vehiclePhotos'] as Array<any>).map(VehiclePhotoResponseDtoToJSON)),
        'vehicleDocuments': ((value['vehicleDocuments'] as Array<any>).map(VehicleDocumentResponseDtoToJSON)),
    };
}

