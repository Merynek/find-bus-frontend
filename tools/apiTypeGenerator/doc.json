{
  "openapi": "3.0.4",
  "info": {
    "title": "My API Merin",
    "version": "v1"
  },
  "paths": {
    "/api/Admin/appConfig": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppBusinessConfigResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBusinessConfigResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppBusinessConfigResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppBusinessConfigRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppBusinessConfigRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppBusinessConfigRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppBusinessConfigRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/emailConfig": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailConfigResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailConfigResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailConfigResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailConfig"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailConfig"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailConfig"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authorize/dontTouch": {
      "get": {
        "tags": [
          "Authorize"
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Authorize/login": {
      "post": {
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Authorize/refresh": {
      "post": {
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Authorize/forgetPassword": {
      "post": {
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Authorize/changePassword": {
      "post": {
        "tags": [
          "Authorize"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Registration/user": {
      "post": {
        "tags": [
          "Registration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationUserRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationUserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationUserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Registration/active": {
      "post": {
        "tags": [
          "Registration"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserActiveRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActiveRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserActiveRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserActiveRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trip/list": {
      "get": {
        "tags": [
          "Trip"
        ],
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MaxNumberOfPersons",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DietForTransporter",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OnlyMine",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MeOffered",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DistanceFromInMeters",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DistanceToInMeters",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripItemResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripItemResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripItemResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Trip/trip": {
      "get": {
        "tags": [
          "Trip"
        ],
        "parameters": [
          {
            "name": "TripId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Trip": {
      "post": {
        "tags": [
          "Trip"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Trip/recommendation": {
      "post": {
        "tags": [
          "Trip"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TripRecommendationRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripRecommendationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TripRecommendationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TripRecommendationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TripRecommendationResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripRecommendationResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripRecommendationResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/TripOffer/offer": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTripOfferRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTripOfferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTripOfferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTripOfferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TripOffer/acceptOffer": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptOfferRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptOfferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptOfferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptOfferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TripOffer/stateMovements": {
      "get": {
        "tags": [
          "TripOffer"
        ],
        "parameters": [
          {
            "name": "TripId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferMovementsResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferMovementsResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferMovementsResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TripOffer/payedOffer": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PayedOfferRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayedOfferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayedOfferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PayedOfferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TripOffer/downloadDocument": {
      "get": {
        "tags": [
          "TripOffer"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FinancialDocumentType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TripOffer/getTripOffers": {
      "get": {
        "tags": [
          "TripOffer"
        ],
        "parameters": [
          {
            "name": "TripId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripOfferResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TripOffer/closeTrip": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTripRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTripRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTripRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTripRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TripOffer/startTrip": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StartTripRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTripRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTripRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartTripRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TripOffer/finishTrip": {
      "post": {
        "tags": [
          "TripOffer"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FinishTripRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishTripRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishTripRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FinishTripRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/settings": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingsRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingsResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingsResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingsResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/transportRequirementsPhotos": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ConcessionDocuments": {
                    "type": "string",
                    "format": "binary"
                  },
                  "BusinessRiskInsurance": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ConcessionDocuments": {
                  "style": "form"
                },
                "BusinessRiskInsurance": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/userTransportVerification": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransportVerificationRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransportVerificationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransportVerificationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransportVerificationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "Limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDetailResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDetailResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserDetailResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/ban": {
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BanUserRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanUserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BanUserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BanUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleResponseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleResponseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleResponseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Vehicles/vehicle": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "name": "IdVehicle",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vehicles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddVehicleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vehicles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles/files": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Id"
                ],
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "FrontPhoto": {
                    "type": "string",
                    "format": "binary"
                  },
                  "RearPhoto": {
                    "type": "string",
                    "format": "binary"
                  },
                  "LeftSidePhoto": {
                    "type": "string",
                    "format": "binary"
                  },
                  "RightSidePhoto": {
                    "type": "string",
                    "format": "binary"
                  },
                  "InterierPhoto1": {
                    "type": "string",
                    "format": "binary"
                  },
                  "InterierPhoto2": {
                    "type": "string",
                    "format": "binary"
                  },
                  "TechnicalCertificate1": {
                    "type": "string",
                    "format": "binary"
                  },
                  "TechnicalCertificate2": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Insurance": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Id": {
                  "style": "form"
                },
                "FrontPhoto": {
                  "style": "form"
                },
                "RearPhoto": {
                  "style": "form"
                },
                "LeftSidePhoto": {
                  "style": "form"
                },
                "RightSidePhoto": {
                  "style": "form"
                },
                "InterierPhoto1": {
                  "style": "form"
                },
                "InterierPhoto2": {
                  "style": "form"
                },
                "TechnicalCertificate1": {
                  "style": "form"
                },
                "TechnicalCertificate2": {
                  "style": "form"
                },
                "Insurance": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Vehicles/transportVerification": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleTransportVerificationRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleTransportVerificationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleTransportVerificationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleTransportVerificationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptOfferRequestDto": {
        "required": [
          "acceptMethod",
          "offerId"
        ],
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "format": "int32"
          },
          "acceptMethod": {
            "$ref": "#/components/schemas/TripOfferAcceptMethod"
          }
        },
        "additionalProperties": false
      },
      "AccessTokenDto": {
        "required": [
          "expireDate",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "expireDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AddVehicleRequestDto": {
        "type": "object",
        "properties": {
          "info": {
            "$ref": "#/components/schemas/VehicleRequestDto"
          }
        },
        "additionalProperties": false
      },
      "AdminUserDetailResponseDto": {
        "required": [
          "active",
          "banned",
          "dic",
          "email",
          "ico",
          "id",
          "isCompany",
          "isVerifiedForTransporting",
          "name",
          "phoneNumber",
          "surname",
          "vehicles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "banned": {
            "type": "boolean"
          },
          "isVerifiedForTransporting": {
            "type": "boolean"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "surname": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "ico": {
            "minLength": 1,
            "type": "string"
          },
          "dic": {
            "minLength": 1,
            "type": "string"
          },
          "isCompany": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/UserAddressResponseDto"
          },
          "mailingAddress": {
            "$ref": "#/components/schemas/UserAddressResponseDto"
          },
          "transferInfo": {
            "$ref": "#/components/schemas/TransferInfoResponseDto"
          },
          "transporterRequirements": {
            "$ref": "#/components/schemas/TransporterRequirementsResponseDto"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleResponseDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Amenities": {
        "enum": [
          "BIKE",
          "SKI",
          "COFFEE",
          "WIFI",
          "AIR_CONDITIONING",
          "BICYCLE_LIFT",
          "SKI_BOX",
          "BOAT_LIFT",
          "WC",
          "TV",
          "USB_SOCKETS",
          "SOCKETS_V230",
          "ADJUSTABLE_SEATS",
          "SEAT_BELTS"
        ],
        "type": "string"
      },
      "AppBusinessConfigResponseDto": {
        "required": [
          "minDateToAcceptOfferInHours",
          "minDiffBetweenStartTripAndEndOrderForAllPaymentsInHours",
          "minDiffBetweenStartTripAndEndOrderInHours",
          "minEndOrderFromNowInHours",
          "payInvoiceWarningAfterAcceptOfferInHours",
          "payRestOfPriceWarningBeforeStartTripInHours",
          "tripCancelFeeAfterLimitPercentageForDemander",
          "tripCancelFeePercentageForDemander",
          "tripCancelPenaltyAfterLimitPercentageForTransporter",
          "tripCancelPenaltyLimitInDays",
          "tripCancelPenaltyMinAmountInCzkForTransporterFromCompany",
          "tripCancelPenaltyMinAmountInCzkForTransporterFromDemander",
          "tripCancelPenaltyPercentageForTransporterFromCompany",
          "tripCancelPenaltyPercentageForTransporterFromDemander",
          "tripDepositInPercentage",
          "tripOfferCommissionPercentage"
        ],
        "type": "object",
        "properties": {
          "minEndOrderFromNowInHours": {
            "type": "number",
            "format": "double"
          },
          "minDateToAcceptOfferInHours": {
            "type": "number",
            "format": "double"
          },
          "minDiffBetweenStartTripAndEndOrderForAllPaymentsInHours": {
            "type": "number",
            "format": "double"
          },
          "minDiffBetweenStartTripAndEndOrderInHours": {
            "type": "number",
            "format": "double"
          },
          "payInvoiceWarningAfterAcceptOfferInHours": {
            "type": "number",
            "format": "double"
          },
          "payRestOfPriceWarningBeforeStartTripInHours": {
            "type": "number",
            "format": "double"
          },
          "tripDepositInPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelFeePercentageForDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelFeeAfterLimitPercentageForDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripOfferCommissionPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyLimitInDays": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyPercentageForTransporterFromCompany": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyMinAmountInCzkForTransporterFromCompany": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyPercentageForTransporterFromDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyMinAmountInCzkForTransporterFromDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyAfterLimitPercentageForTransporter": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BanUserRequestDto": {
        "required": [
          "ban",
          "idUser"
        ],
        "type": "object",
        "properties": {
          "idUser": {
            "type": "integer",
            "format": "int32"
          },
          "ban": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequestDto": {
        "required": [
          "newPassword",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CloseTripOfferReason": {
        "enum": [
          "DEMANDER_GENERAL",
          "DEMANDER_UNPAID",
          "TRANSPORTER_GENERAL",
          "GENERAL"
        ],
        "type": "string"
      },
      "CloseTripRequestDto": {
        "required": [
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "$ref": "#/components/schemas/CloseTripOfferReason"
          },
          "reasonText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Country": {
        "enum": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BQ",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "CV",
          "KH",
          "CM",
          "CA",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CW",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "VA",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MK",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SX",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "SS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SZ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "US",
          "UM",
          "UY",
          "UZ",
          "VU",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "XK",
          "YE",
          "ZM",
          "ZW"
        ],
        "type": "string"
      },
      "CreateOfferRequestDto": {
        "required": [
          "endOfferDate",
          "price",
          "tripId",
          "vehicleId"
        ],
        "type": "object",
        "properties": {
          "endOfferDate": {
            "type": "string",
            "format": "date-time"
          },
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDto"
          }
        },
        "additionalProperties": false
      },
      "CreateTripRequestDto": {
        "required": [
          "amenities",
          "dietForTransporter",
          "endOrder",
          "handicappedUserCount",
          "numberOfPersons",
          "routes"
        ],
        "type": "object",
        "properties": {
          "routes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteRequestDto"
            }
          },
          "numberOfPersons": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amenities"
            }
          },
          "handicappedUserCount": {
            "type": "integer",
            "format": "int32"
          },
          "dietForTransporter": {
            "type": "boolean"
          },
          "endOrder": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "enum": [
          "ALL",
          "DZD",
          "ARS",
          "AUD",
          "BHD",
          "BDT",
          "AMD",
          "BOB",
          "BZD",
          "BND",
          "KHR",
          "CAD",
          "LKR",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "HRK",
          "CZK",
          "DKK",
          "DOP",
          "ETB",
          "EEK",
          "GTQ",
          "HNL",
          "HKD",
          "HUF",
          "ISK",
          "INR",
          "IDR",
          "IRR",
          "IQD",
          "ILS",
          "JMD",
          "JPY",
          "KZT",
          "JOD",
          "KES",
          "KRW",
          "KWD",
          "KGS",
          "LAK",
          "LBP",
          "LVL",
          "LYD",
          "LTL",
          "MOP",
          "MYR",
          "MVR",
          "MXN",
          "MNT",
          "MAD",
          "OMR",
          "NPR",
          "NZD",
          "NIO",
          "NOK",
          "PKR",
          "PAB",
          "PYG",
          "PEN",
          "PHP",
          "QAR",
          "RUB",
          "RWF",
          "SAR",
          "SGD",
          "VND",
          "ZAR",
          "SEK",
          "CHF",
          "SYP",
          "THB",
          "TTD",
          "AED",
          "TND",
          "MKD",
          "EGP",
          "GBP",
          "USD",
          "UYU",
          "UZS",
          "YER",
          "TWD",
          "ZWL",
          "VEF",
          "RSD",
          "AZN",
          "RON",
          "TRY",
          "XOF",
          "AFN",
          "TJS",
          "BYR",
          "BGN",
          "BAM",
          "EUR",
          "UAH",
          "GEL",
          "PLN",
          "BRL"
        ],
        "type": "string"
      },
      "CurrentUserDto": {
        "required": [
          "email",
          "id",
          "role"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "DeleteTripOfferRequestDto": {
        "required": [
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DirectionRequestDto": {
        "required": [
          "distance",
          "polyline",
          "time"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "polyline": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DirectionResponseDto": {
        "required": [
          "distance",
          "polyline",
          "time"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "integer",
            "format": "int32"
          },
          "polyline": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmailConfigLocalizationResponseDto": {
        "required": [
          "language",
          "templateId"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/Languages"
          },
          "templateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmailConfigResponseDto": {
        "required": [
          "templates",
          "userParams"
        ],
        "type": "object",
        "properties": {
          "userParams": {
            "type": "object",
            "properties": {
              "Role": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              },
              "Surname": {
                "type": "string"
              },
              "PhoneNumber": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailTemplateResponseDto"
            }
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateResponseDto": {
        "required": [
          "localizations",
          "params",
          "type"
        ],
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "TRIP_DETAIL_LINK": {
                "type": "string"
              },
              "PERCENT": {
                "type": "string"
              },
              "REASON": {
                "type": "string"
              },
              "RESET_PASSWORD_LINK": {
                "type": "string"
              },
              "ACTIVE_USER_LINK": {
                "type": "string"
              },
              "PRICE": {
                "type": "string"
              },
              "ACCEPT_METHOD": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "type": {
            "$ref": "#/components/schemas/EmailType"
          },
          "localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailConfigLocalizationResponseDto"
            }
          }
        },
        "additionalProperties": false
      },
      "EmailType": {
        "enum": [
          "REGISTRATION",
          "FORGET_PASSWORD",
          "TRIP_INQUIRY_DONE_PICK_TRANSPORTER_FOR_DEMANDER",
          "TRIP_OFFER_CHANGED_DEMANDER",
          "TRIP_OFFER_CHANGED_TRANSPORTER",
          "TRIP_DONE_NO_OFFERS_FOR_DEMANDER",
          "TRIP_CANCELED_BY_DEMANDER_WITH_HANDLING_FEE_FOR_DEMANDER",
          "TRIP_OFFER_CLOSED_BY_DEMANDER_FOR_TRANSPORTER",
          "TRIP_OFFER_CLOSED_PAYED_DEPOSIT_BY_DEMANDER_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_DEPOSIT_PAID_FEE_GRANTED_FOR_TRANSPORTER",
          "TRIP_OFFER_CANCELED_BY_ADMIN_DUE_TO_TRANSPORTER_DEPOSIT_PAID_TO_TRANSPORTER",
          "TRIP_CANCELED_BY_TRANSPORTER_LESS_THAN_21_DAYS_BEFORE_DEPARTURE_FEE_20_PERCENT_TO_TRANSPORTER",
          "STORNO_ZE_STRANY_ZADAVATELE_OD_ADMINA_DEPOSIT_FEE_FOR_DEMANDER",
          "STORNO_ZE_STRANY_ZADAVATELE_OD_ADMINA_HANDLING_FEE_DEMANDER",
          "STORNO_ZE_STRANY_TRANSPORTERA_OD_ADMINA_FEE_TRANSPORTER",
          "TRIP_CANCELED_BY_TRANSPORTER_COMPENSATION_GRANTED_TO_DEMANDER",
          "TRIP_OFFER_CANCELED_BY_TRANSPORTER_PAYED_WITH_FEE_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_TRANSPORTER_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_TRANSPORTER_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_TRANSPORTER_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_DEMANDER_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_DEMANDER_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_DEMANDER_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_DEMANDER_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CLOSED_BY_ADMIN_REFUND_DEPOSIT_FOR_DEMANDER",
          "TRIP_CLOSED_BY_ADMIN_REFUND_FULL_FOR_DEMANDER",
          "TRIP_OFFER_CANCELED_BY_TRANSPORTER_NOT_PAYED_WITH_FEE_FOR_DEMANDER",
          "TRIP_CANCELED_BY_ADMIN_DEMANDER_FAULT_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_ADMIN_DEMANDER_FAULT_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_DEMANDER_FAULT_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_ADMIN_DEMANDER_FAULT_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_TRANSPORTER_FAULT_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_TRANSPORTER_FAULT_DAYS_BEFORE_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_CANCELED_BY_ADMIN_TRANSPORTER_FAULT_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_TRANSPORTER_FAULT_DAYS_AFTER_LIMIT_DEPARTURE_FEE_PERCENT_FOR_DEMANDER",
          "TRIP_OFFER_CANCELED_BY_TRANSPORTER_NOT_PAYED_WITH_FEE_FOR_TRANSPORTER",
          "DEMANDER_CLOSE_TRIP_OFFER_NO_ACCEPTED_OFFER_FOR_DEMANDER",
          "DEMANDER_CLOSE_TRIP_OFFER_NO_ACCEPTED_OFFER_FOR_TRANSPORTER",
          "TRIP_CANCELED_BY_ADMIN_TRANSPORTER_FAULT_COMPENSATION_GRANTED_FOR_DEMANDER",
          "TRANSPORTER_CANCEL_OFFER_FOR_DEMANDER",
          "TRANSPORTER_CANCEL_OFFER_FOR_TRANSPORTER",
          "TRIP_OFFER_ACCEPTED_DEPOSIT_FOR_DEMANDER",
          "TRIP_OFFER_ACCEPTED_FULL_FOR_DEMANDER",
          "YOUR_OFFER_CHOSEN_FOR_TRANSPORTER",
          "TRIP_OFFER_PAYED_DEPOSIT_FOR_TRANSPORTER",
          "TRIP_OFFER_PAYED_DEPOSIT_FOR_DEMANDER",
          "TRIP_OFFER_PAYED_REST_FOR_TRANSPORTER",
          "TRIP_OFFER_PAYED_REST_FOR_DEMANDER",
          "TRIP_OFFER_PAYED_FULL_FOR_TRANSPORTER",
          "TRIP_OFFER_PAYED_FULL_FOR_DEMANDER",
          "TRIP_OFFER_PROCESSED_FOR_TRANSPORTER",
          "TRIP_INQUIRY_CLOSED_FOR_DEMANDER",
          "STORNO_ADMINA_NEW_TRIP_DEMANDER",
          "TRIP_OFFER_CLOSED_UNPAID_REST_FOR_DEMANDER",
          "TRIP_OFFER_CLOSED_CANCEL_HANDLING_FEE_FOR_DEMANDER",
          "TRIP_OFFER_CLOSED_UNPAID_DEPOSIT_FOR_TRANSPORTER",
          "TRIP_OFFER_CLOSED_UNPAID_FULL_FOR_DEMANDER",
          "TRIP_OFFER_CLOSED_UNPAID_REST_FOR_TRANSPORTER",
          "TRIP_CLOSE_BY_ADMIN_NO_ACCEPTED_OFFER_FOR_TRANSPORTER",
          "TRIP_OFFER_PAYMENT_WARNING_DEPOSIT_FOR_DEMANDER",
          "TRIP_OFFER_PAYMENT_WARNING_FULL_FOR_DEMANDER",
          "TRIP_OFFER_PAYMENT_WARNING_REST_FOR_DEMANDER",
          "TRIP_NEW_OFFER_FOR_DEMANDER",
          "TRIP_CREATED_FOR_DEMANDER",
          "TRIP_OFFER_PAY_COMMISSION_FOR_TRANSPORTER",
          "TRIP_FINISHED_INVOICE_DEMANDER",
          "TRIP_FINISHED_REVIEW_TRANSPORTER",
          "TRIP_FINISHED_REVIEW_DEMANDER",
          "TRIP_CLOSE_NO_ACCEPTED_OFFER_FOR_DEMANDER",
          "TRIP_CANCELED_BY_DEMANDER_DEPOSIT_PAID_FOR_DEMANDER",
          "TRIP_CLOSE_BY_ADMIN_FOR_DEMANDER",
          "TRIP_CLOSE_BY_ADMIN_FOR_TRANSPORTER"
        ],
        "type": "string"
      },
      "ErrorCode": {
        "enum": [
          "UNKNOWN",
          "BANNED",
          "UNSUPPORTED_ROLE",
          "UNKNOWN_ROLE",
          "LOGIN_FAILED",
          "USER_EXISTS",
          "UNKNOWN_EMAIL",
          "UNKNOWN_USER",
          "WRONG_PASSWORD",
          "INVALID_PASSWORD_TOKEN",
          "INACTIVE"
        ],
        "type": "string"
      },
      "ErrorResponseDto": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EuroStandard": {
        "enum": [
          "Euro3",
          "Euro4",
          "Euro5",
          "Euro6"
        ],
        "type": "string"
      },
      "FileCategory": {
        "enum": [
          "IMAGE",
          "DOCUMENT",
          "OTHER",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "FileResponseDto": {
        "required": [
          "category",
          "id",
          "path",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FileType"
          },
          "category": {
            "$ref": "#/components/schemas/FileCategory"
          }
        },
        "additionalProperties": false
      },
      "FileType": {
        "enum": [
          "VEHICLE_PHOTO",
          "VEHICLE_INSURANCE",
          "VEHICLE_TECHNICAL_CERTIFICATE",
          "CONCESSION_DOCUMENT",
          "BUSINESS_RISK_INSURANCE"
        ],
        "type": "string"
      },
      "FinancialDocumentResponseDto": {
        "required": [
          "dateOfIssue",
          "dueDate",
          "id",
          "internalDocumentNumber",
          "payed",
          "price",
          "type",
          "variableSymbol"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "variableSymbol": {
            "minLength": 1,
            "type": "string"
          },
          "internalDocumentNumber": {
            "minLength": 1,
            "type": "string"
          },
          "dateOfIssue": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/FinancialDocumentType"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDto"
          },
          "payed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FinancialDocumentType": {
        "enum": [
          "PENALTY",
          "DEPOSIT",
          "INVOICE",
          "TRIP_INVOICE"
        ],
        "type": "string"
      },
      "FinishTripRequestDto": {
        "required": [
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ForgetPasswordRequestDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "GeoPoint": {
        "required": [
          "lat",
          "lng"
        ],
        "type": "object",
        "properties": {
          "lng": {
            "type": "number",
            "format": "double"
          },
          "lat": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Languages": {
        "enum": [
          "CZECH",
          "ENGLISH"
        ],
        "type": "string"
      },
      "LoginRequestDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginResponseDto": {
        "required": [
          "appBusinessConfig",
          "refreshToken",
          "token",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/CurrentUserDto"
          },
          "token": {
            "$ref": "#/components/schemas/AccessTokenDto"
          },
          "appBusinessConfig": {
            "$ref": "#/components/schemas/AppBusinessConfigResponseDto"
          },
          "refreshToken": {
            "$ref": "#/components/schemas/AccessTokenDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationsEnum": {
        "enum": [
          "NEW_OFFER_FROM_TRANSPORTER"
        ],
        "type": "string"
      },
      "PayedOfferRequestDto": {
        "required": [
          "offerId"
        ],
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlaceRequestDto": {
        "required": [
          "country",
          "name",
          "placeFormatted",
          "placeId",
          "point"
        ],
        "type": "object",
        "properties": {
          "placeId": {
            "minLength": 1,
            "type": "string"
          },
          "point": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "placeFormatted": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PlaceResponseDto": {
        "required": [
          "country",
          "name",
          "placeFormatted",
          "placeId",
          "point"
        ],
        "type": "object",
        "properties": {
          "placeId": {
            "minLength": 1,
            "type": "string"
          },
          "point": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "placeFormatted": {
            "minLength": 1,
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          }
        },
        "additionalProperties": false
      },
      "PriceDto": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequestDto": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegistrationUserRequestDto": {
        "required": [
          "confirmPassword",
          "email",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "RouteRequestDto": {
        "required": [
          "direction",
          "end",
          "from",
          "start",
          "to"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "$ref": "#/components/schemas/StopRequestDto"
          },
          "to": {
            "$ref": "#/components/schemas/StopRequestDto"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionRequestDto"
          }
        },
        "additionalProperties": false
      },
      "RouteResponseDto": {
        "required": [
          "direction",
          "end",
          "from",
          "start",
          "to"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "$ref": "#/components/schemas/StopResponseDto"
          },
          "to": {
            "$ref": "#/components/schemas/StopResponseDto"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionResponseDto"
          }
        },
        "additionalProperties": false
      },
      "StartTripRequestDto": {
        "required": [
          "tripId"
        ],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StopRequestDto": {
        "required": [
          "place"
        ],
        "type": "object",
        "properties": {
          "place": {
            "$ref": "#/components/schemas/PlaceRequestDto"
          }
        },
        "additionalProperties": false
      },
      "StopResponseDto": {
        "required": [
          "place"
        ],
        "type": "object",
        "properties": {
          "place": {
            "$ref": "#/components/schemas/PlaceResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TransferInfoRequestDto": {
        "type": "object",
        "properties": {
          "iban": {
            "type": "string",
            "nullable": true
          },
          "swift": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferInfoResponseDto": {
        "required": [
          "iban",
          "swift"
        ],
        "type": "object",
        "properties": {
          "iban": {
            "minLength": 1,
            "type": "string"
          },
          "swift": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TransporterRequirementsResponseDto": {
        "type": "object",
        "properties": {
          "concessionNumber": {
            "type": "string",
            "nullable": true
          },
          "concessionDocuments": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "businessRiskInsurance": {
            "$ref": "#/components/schemas/FileResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TripItemResponseDto": {
        "required": [
          "alreadyOffered",
          "amenities",
          "created",
          "dietForTransporter",
          "endOffer",
          "handicappedUserCount",
          "hasOffers",
          "id",
          "isMine",
          "numberOfPersons",
          "offerHasEnded",
          "offerState",
          "routes",
          "totalDistanceInMeters"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteResponseDto"
            }
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amenities"
            }
          },
          "numberOfPersons": {
            "type": "integer",
            "format": "int32"
          },
          "totalDistanceInMeters": {
            "type": "integer",
            "format": "int32"
          },
          "handicappedUserCount": {
            "type": "integer",
            "format": "int32"
          },
          "dietForTransporter": {
            "type": "boolean"
          },
          "endOffer": {
            "type": "string",
            "format": "date-time"
          },
          "offerHasEnded": {
            "type": "boolean"
          },
          "offerState": {
            "$ref": "#/components/schemas/TripOfferState"
          },
          "alreadyOffered": {
            "type": "boolean"
          },
          "isMine": {
            "type": "boolean"
          },
          "hasOffers": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TripOfferAcceptMethod": {
        "enum": [
          "PAY_DEPOSIT",
          "PAY_FULL"
        ],
        "type": "string"
      },
      "TripOfferMovementsResponseDto": {
        "required": [
          "datetime",
          "from",
          "id",
          "to",
          "tripId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tripId": {
            "type": "integer",
            "format": "int32"
          },
          "from": {
            "$ref": "#/components/schemas/TripOfferState"
          },
          "to": {
            "$ref": "#/components/schemas/TripOfferState"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "$ref": "#/components/schemas/CloseTripOfferReason"
          },
          "customReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TripOfferResponseDto": {
        "required": [
          "accepted",
          "endOfferDate",
          "id",
          "price",
          "user",
          "vehicle"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserDetailResponseDto"
          },
          "vehicle": {
            "$ref": "#/components/schemas/VehicleResponseDto"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDto"
          },
          "accepted": {
            "type": "boolean"
          },
          "endOfferDate": {
            "type": "string",
            "format": "date-time"
          },
          "acceptOfferDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialDocumentResponseDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TripOfferState": {
        "enum": [
          "CREATED",
          "HAS_OFFERS",
          "ACCEPTED_TRANSPORTER_PAY_DEPOSIT",
          "ACCEPTED_TRANSPORTER_PAY_FULL",
          "PAYED_DEPOSIT",
          "PAYED_FULL",
          "STARTED",
          "FINISHED",
          "CLOSED"
        ],
        "type": "string"
      },
      "TripRecommendationRequestDto": {
        "required": [
          "routes"
        ],
        "type": "object",
        "properties": {
          "routes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TripRecommendationRouteRequestDto"
            }
          }
        },
        "additionalProperties": false
      },
      "TripRecommendationResponseDto": {
        "required": [
          "reduce_routes_hours",
          "reduce_time_hours",
          "routes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TripRecommendationType"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TripRecommendationRouteResponseDto"
            }
          },
          "reduce_routes_hours": {
            "type": "number",
            "format": "double"
          },
          "reduce_time_hours": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TripRecommendationRouteRequestDto": {
        "required": [
          "directionTimeSeconds",
          "previousPauseTimeSeconds"
        ],
        "type": "object",
        "properties": {
          "directionTimeSeconds": {
            "type": "number",
            "format": "double"
          },
          "previousPauseTimeSeconds": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TripRecommendationRouteResponseDto": {
        "required": [
          "dJ_InHours",
          "m_InHours",
          "real_Time_InHours"
        ],
        "type": "object",
        "properties": {
          "dJ_InHours": {
            "type": "number",
            "format": "double"
          },
          "m_InHours": {
            "type": "number",
            "format": "double"
          },
          "real_Time_InHours": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TripRecommendationType": {
        "enum": [
          "ONE_DRIVER",
          "TWO_DRIVERS"
        ],
        "type": "string"
      },
      "TripResponseDto": {
        "required": [
          "amenities",
          "created",
          "dietForTransporter",
          "endOrder",
          "handicappedUserCount",
          "id",
          "numberOfPersons",
          "offerHasEnded",
          "offerState",
          "ownerId",
          "routes",
          "totalDistanceInMeters"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteResponseDto"
            }
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amenities"
            }
          },
          "numberOfPersons": {
            "type": "integer",
            "format": "int32"
          },
          "handicappedUserCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalDistanceInMeters": {
            "type": "integer",
            "format": "int32"
          },
          "dietForTransporter": {
            "type": "boolean"
          },
          "endOrder": {
            "type": "string",
            "format": "date-time"
          },
          "offerHasEnded": {
            "type": "boolean"
          },
          "offerState": {
            "$ref": "#/components/schemas/TripOfferState"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateAppBusinessConfigRequestDto": {
        "required": [
          "minDateToAcceptOfferInHours",
          "minDiffBetweenStartTripAndEndOrderForAllPaymentsInHours",
          "minDiffBetweenStartTripAndEndOrderInHours",
          "minEndOrderFromNowInHours",
          "payInvoiceWarningAfterAcceptOfferInHours",
          "payRestOfPriceWarningBeforeStartTripInHours",
          "tripCancelFeeAfterLimitPercentageForDemander",
          "tripCancelFeePercentageForDemander",
          "tripCancelPenaltyAfterLimitPercentageForTransporter",
          "tripCancelPenaltyLimitInDays",
          "tripCancelPenaltyMinAmountInCzkForTransporterFromCompany",
          "tripCancelPenaltyMinAmountInCzkForTransporterFromDemander",
          "tripCancelPenaltyPercentageForTransporterFromCompany",
          "tripCancelPenaltyPercentageForTransporterFromDemander",
          "tripDepositInPercentage",
          "tripOfferCommissionPercentage"
        ],
        "type": "object",
        "properties": {
          "minEndOrderFromNowInHours": {
            "type": "number",
            "format": "double"
          },
          "minDateToAcceptOfferInHours": {
            "type": "number",
            "format": "double"
          },
          "minDiffBetweenStartTripAndEndOrderForAllPaymentsInHours": {
            "type": "number",
            "format": "double"
          },
          "minDiffBetweenStartTripAndEndOrderInHours": {
            "type": "number",
            "format": "double"
          },
          "payInvoiceWarningAfterAcceptOfferInHours": {
            "type": "number",
            "format": "double"
          },
          "payRestOfPriceWarningBeforeStartTripInHours": {
            "type": "number",
            "format": "double"
          },
          "tripDepositInPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelFeePercentageForDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelFeeAfterLimitPercentageForDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripOfferCommissionPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyLimitInDays": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyPercentageForTransporterFromCompany": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyMinAmountInCzkForTransporterFromCompany": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyPercentageForTransporterFromDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyMinAmountInCzkForTransporterFromDemander": {
            "type": "integer",
            "format": "int32"
          },
          "tripCancelPenaltyAfterLimitPercentageForTransporter": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateEmailConfig": {
        "required": [
          "language",
          "templateId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EmailType"
          },
          "language": {
            "$ref": "#/components/schemas/Languages"
          },
          "templateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateOfferRequestDto": {
        "required": [
          "endOfferDate",
          "offerId"
        ],
        "type": "object",
        "properties": {
          "offerId": {
            "type": "integer",
            "format": "int32"
          },
          "endOfferDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateVehicleRequestDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "info": {
            "$ref": "#/components/schemas/VehicleRequestDto"
          }
        },
        "additionalProperties": false
      },
      "UserActiveRequestDto": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserAddressRequestDto": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "psc": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAddressResponseDto": {
        "required": [
          "city",
          "houseNumber",
          "psc",
          "street"
        ],
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "city": {
            "minLength": 1,
            "type": "string"
          },
          "psc": {
            "minLength": 1,
            "type": "string"
          },
          "street": {
            "minLength": 1,
            "type": "string"
          },
          "houseNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserDetailResponseDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          "TRANSPORTER",
          "DEMANDER",
          "ADMIN"
        ],
        "type": "string"
      },
      "UserSettingsRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "ico": {
            "type": "string",
            "nullable": true
          },
          "dic": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "isCompany": {
            "type": "boolean",
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationsEnum"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/UserAddressRequestDto"
          },
          "mailingAddress": {
            "$ref": "#/components/schemas/UserAddressRequestDto"
          },
          "transferInfo": {
            "$ref": "#/components/schemas/TransferInfoRequestDto"
          },
          "concessionNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSettingsResponseDto": {
        "required": [
          "companyName",
          "dic",
          "ico",
          "isCompany",
          "isVerifiedForTransporting",
          "name",
          "notifications",
          "phoneNumber",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "surname": {
            "minLength": 1,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "ico": {
            "minLength": 1,
            "type": "string"
          },
          "dic": {
            "minLength": 1,
            "type": "string"
          },
          "companyName": {
            "minLength": 1,
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationsEnum"
            }
          },
          "isCompany": {
            "type": "boolean"
          },
          "isVerifiedForTransporting": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/UserAddressResponseDto"
          },
          "mailingAddress": {
            "$ref": "#/components/schemas/UserAddressResponseDto"
          },
          "transferInfo": {
            "$ref": "#/components/schemas/TransferInfoResponseDto"
          },
          "transporterRequirements": {
            "$ref": "#/components/schemas/TransporterRequirementsResponseDto"
          }
        },
        "additionalProperties": false
      },
      "UserTransportVerificationRequestDto": {
        "required": [
          "id",
          "isVerifiedForTransporting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isVerifiedForTransporting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "VehicleRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "registrationSign": {
            "type": "string",
            "nullable": true
          },
          "vin": {
            "type": "string",
            "nullable": true
          },
          "stkExpired": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "yearOfManufacture": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "personsCapacity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "euro": {
            "$ref": "#/components/schemas/EuroStandard"
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amenities"
            },
            "nullable": true
          },
          "handicappedUserCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departureStation": {
            "$ref": "#/components/schemas/PlaceRequestDto"
          }
        },
        "additionalProperties": false
      },
      "VehicleResponseDto": {
        "required": [
          "amenities",
          "euro",
          "handicappedUserCount",
          "id",
          "isVerifiedForTransporting",
          "name",
          "personsCapacity",
          "registrationSign",
          "stkExpired",
          "vin",
          "yearOfManufacture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "isVerifiedForTransporting": {
            "type": "boolean"
          },
          "registrationSign": {
            "minLength": 1,
            "type": "string"
          },
          "vin": {
            "minLength": 1,
            "type": "string"
          },
          "stkExpired": {
            "type": "string",
            "format": "date-time"
          },
          "yearOfManufacture": {
            "type": "integer",
            "format": "int32"
          },
          "personsCapacity": {
            "type": "integer",
            "format": "int32"
          },
          "euro": {
            "$ref": "#/components/schemas/EuroStandard"
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Amenities"
            }
          },
          "handicappedUserCount": {
            "type": "integer",
            "format": "int32"
          },
          "frontPhoto": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "rearPhoto": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "leftSidePhoto": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "rightSidePhoto": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "interierPhoto1": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "interierPhoto2": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "technicalCertificate1": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "technicalCertificate2": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "insurance": {
            "$ref": "#/components/schemas/FileResponseDto"
          },
          "departureStation": {
            "$ref": "#/components/schemas/PlaceResponseDto"
          }
        },
        "additionalProperties": false
      },
      "VehicleTransportVerificationRequestDto": {
        "required": [
          "id",
          "isVerifiedForTransporting"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isVerifiedForTransporting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put ONLY your JWT Bearer token on textbox below!",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}